{"ast":null,"code":"import{applyMiddleware,compose,createStore,combineReducers}from\"redux\";import thunk from\"redux-thunk\";import blockchainReducer from\"./blockchain/blockchainReducer\";import dataReducer from\"./data/dataReducer\";var rootReducer=combineReducers({blockchain:blockchainReducer,data:dataReducer});var middleware=[thunk];var composeEnhancers=compose(applyMiddleware.apply(void 0,middleware));var configureStore=function configureStore(){return createStore(rootReducer,composeEnhancers);};var store=configureStore();export default store;","map":{"version":3,"names":["applyMiddleware","compose","createStore","combineReducers","thunk","blockchainReducer","dataReducer","rootReducer","blockchain","data","middleware","composeEnhancers","configureStore","store"],"sources":["/Users/drallek/Desktop/Cryptosphere/hashlips_nft_minting_dapp/src/redux/store.js"],"sourcesContent":["import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n"],"mappings":"AAAA,OAASA,eAAe,CAAEC,OAAO,CAAEC,WAAW,CAAEC,eAAe,KAAQ,OAAO,CAC9E,MAAOC,MAAK,KAAM,aAAa,CAC/B,MAAOC,kBAAiB,KAAM,gCAAgC,CAC9D,MAAOC,YAAW,KAAM,oBAAoB,CAE5C,GAAMC,YAAW,CAAGJ,eAAe,CAAC,CAClCK,UAAU,CAAEH,iBAAiB,CAC7BI,IAAI,CAAEH,WACR,CAAC,CAAC,CAEF,GAAMI,WAAU,CAAG,CAACN,KAAK,CAAC,CAC1B,GAAMO,iBAAgB,CAAGV,OAAO,CAACD,eAAe,cAAIU,UAAU,CAAC,CAAC,CAEhE,GAAME,eAAc,CAAG,QAAjBA,eAAc,EAAS,CAC3B,MAAOV,YAAW,CAACK,WAAW,CAAEI,gBAAgB,CAAC,CACnD,CAAC,CAED,GAAME,MAAK,CAAGD,cAAc,EAAE,CAE9B,cAAeC,MAAK"},"metadata":{},"sourceType":"module"}